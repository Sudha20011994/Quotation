// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuotationService.Model;

#nullable disable

namespace QuotationService.Migrations
{
    [DbContext(typeof(QuotationDbContext))]
    [Migration("20241103180708_InitialDbSetup")]
    partial class InitialDbSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("QuotationService.Model.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<double>("Qty")
                        .HasColumnType("REAL");

                    b.Property<int>("QuotationFormId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Units")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuotationFormId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("QuotationService.Model.QuotationForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("NetValue")
                        .HasColumnType("REAL");

                    b.Property<string>("PaymentTerms")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("QuotationNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("QuotationValidity")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("QuotationForms");
                });

            modelBuilder.Entity("QuotationService.Model.Material", b =>
                {
                    b.HasOne("QuotationService.Model.QuotationForm", "QuotationForm")
                        .WithMany("Materials")
                        .HasForeignKey("QuotationFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuotationForm");
                });

            modelBuilder.Entity("QuotationService.Model.QuotationForm", b =>
                {
                    b.Navigation("Materials");
                });
#pragma warning restore 612, 618
        }
    }
}
